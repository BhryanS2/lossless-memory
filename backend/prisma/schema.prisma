// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model UserType {
  id    Int     @id @default(autoincrement())
  Type  String
  users users[]
}

model UserLogs {
  id     Int       @id @default(autoincrement())
  UserId Int       @unique
  login  DateTime
  logout DateTime?
}

model users {
  id                  Int                   @id @default(autoincrement())
  firstName           String
  lastName            String
  image               String
  CPF                 String
  birthday            DateTime
  createAt            DateTime              @default(now())
  updateAt            DateTime              @default(now())
  userTypeId          Int
  email               String                @unique
  password            String
  userType            UserType              @relation(fields: [userTypeId], references: [id])
  userProfile         userProfile           @relation(fields: [id], references: [id])
  challengesCompleted challengesCompleted[]
}

model userProfile {
  id                    Int                  @id @default(autoincrement())
  userLevel             Int
  experience            Int
  users                 users[]
  challenges            challenges?          @relation(fields: [challengesId], references: [id])
  challengesId          Int?
  challengesCompleted   challengesCompleted? @relation(fields: [challengesCompletedId], references: [id])
  challengesCompletedId Int?
}

model challenges {
  id                  Int                   @id @default(autoincrement())
  type                String
  description         String
  amount              Int
  userProfile         userProfile[]
  challengesCompleted challengesCompleted[]
}

model challengesCompleted {
  id           Int           @id @default(autoincrement())
  user         users         @relation(fields: [userId], references: [id])
  challenge    challenges    @relation(fields: [challengesId], references: [id])
  userId       Int
  challengesId Int
  userProfile  userProfile[]
}
